"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-ts-tradingview-widgets";
exports.ids = ["vendor-chunks/react-ts-tradingview-widgets"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-ts-tradingview-widgets/dist/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-ts-tradingview-widgets/dist/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdvancedRealTimeChart: () => (/* binding */ AdvancedRealTimeChart$1),\n/* harmony export */   CompanyProfile: () => (/* binding */ CompanyProfile$1),\n/* harmony export */   CryptoCoinsHeatmap: () => (/* binding */ CryptoCoinsHeatmap$1),\n/* harmony export */   CryptoCurrencyMarket: () => (/* binding */ CryptoCurrencyMarket$1),\n/* harmony export */   EconomicCalendar: () => (/* binding */ EconomicCalendar$1),\n/* harmony export */   ForexCrossRates: () => (/* binding */ ForexCrossRates$1),\n/* harmony export */   ForexHeatMap: () => (/* binding */ ForexHeatMap$1),\n/* harmony export */   FundamentalData: () => (/* binding */ FundamentalData$1),\n/* harmony export */   MarketData: () => (/* binding */ MarketData$1),\n/* harmony export */   MarketOverview: () => (/* binding */ MarketOverview$1),\n/* harmony export */   MiniChart: () => (/* binding */ MiniChart$1),\n/* harmony export */   Screener: () => (/* binding */ Screener$1),\n/* harmony export */   SingleTicker: () => (/* binding */ SingleTicker$1),\n/* harmony export */   StockHeatmap: () => (/* binding */ StockHeatmap$1),\n/* harmony export */   StockMarket: () => (/* binding */ StockMarket$1),\n/* harmony export */   SymbolInfo: () => (/* binding */ SymbolInfo$1),\n/* harmony export */   SymbolOverview: () => (/* binding */ SymbolOverview$1),\n/* harmony export */   TechnicalAnalysis: () => (/* binding */ TechnicalAnalysis$1),\n/* harmony export */   Ticker: () => (/* binding */ Ticker$1),\n/* harmony export */   TickerTape: () => (/* binding */ TickerTape$1),\n/* harmony export */   Timeline: () => (/* binding */ Timeline$1)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar createId = function (length) {\r\n    var result = \"\";\r\n    var characters = \"abcdef0123456789\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\n\nvar Copyright = function (_a) {\r\n    var href = _a.href, spanText = _a.spanText, _b = _a.text, text = _b === void 0 ? \"By TradingView\" : _b, copyrightStyles = _a.copyrightStyles;\r\n    var defaultStyles = {\r\n        parent: {\r\n            fontSize: \"13px\",\r\n            lineHeight: \"32px\",\r\n            textAlign: \"center\",\r\n            verticalAlign: \"center\",\r\n            fontFamily: \"Trebuchet MS, Arial, sans-serif\",\r\n            color: \"#9db2bd\",\r\n        },\r\n        link: {\r\n            textDecoration: \"none\",\r\n            color: \"#9db2bd\",\r\n        },\r\n        span: {\r\n            color: \"#2962FF\",\r\n        },\r\n    };\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { style: Object.assign({}, defaultStyles.parent, copyrightStyles === null || copyrightStyles === void 0 ? void 0 : copyrightStyles.parent), className: \"tradingview-widget-copyright\" },\r\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", { style: Object.assign({}, defaultStyles.link, copyrightStyles === null || copyrightStyles === void 0 ? void 0 : copyrightStyles.link), href: href, target: \"_blank\" },\r\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", { style: Object.assign({}, defaultStyles.span, copyrightStyles === null || copyrightStyles === void 0 ? void 0 : copyrightStyles.span) },\r\n                spanText,\r\n                \" \")),\r\n        text));\r\n};\n\nvar Widget = function (_a) {\r\n    var scriptHTML = _a.scriptHTML, scriptSRC = _a.scriptSRC, containerId = _a.containerId, type = _a.type, copyrightProps = _a.copyrightProps;\r\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\r\n        var refValue;\r\n        var initWidget = function () {\r\n            if (ref.current) {\r\n                var script_1 = document.createElement(\"script\");\r\n                script_1.setAttribute(\"data-nscript\", \"afterInteractive\");\r\n                script_1.src = scriptSRC;\r\n                script_1.async = true;\r\n                script_1.type = \"text/javascript\";\r\n                if (type === \"Widget\" || type === \"MediumWidget\") {\r\n                    script_1.onload = function () {\r\n                        if (typeof TradingView !== undefined) {\r\n                            script_1.innerHTML = JSON.stringify(type === \"Widget\"\r\n                                ? new TradingView.widget(scriptHTML)\r\n                                : type === \"MediumWidget\"\r\n                                    ? new TradingView.MediumWidget(scriptHTML)\r\n                                    : undefined);\r\n                        }\r\n                    };\r\n                }\r\n                else {\r\n                    script_1.innerHTML = JSON.stringify(scriptHTML);\r\n                }\r\n                if (!ref.current.querySelector('script[src=\"' + scriptSRC + '\"]')) {\r\n                    ref.current.appendChild(script_1);\r\n                }\r\n                refValue = ref.current;\r\n            }\r\n        };\r\n        requestAnimationFrame(initWidget);\r\n        return function () {\r\n            if (refValue) {\r\n                while (refValue.firstChild) {\r\n                    refValue.removeChild(refValue.firstChild);\r\n                }\r\n            }\r\n        };\r\n    }, [ref, scriptHTML, type, scriptSRC]);\r\n    var containerKey = containerId || \"tradingview_\" + scriptHTML;\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { style: { display: \"contents\" } },\r\n        type === \"Widget\" || type === \"MediumWidget\" ? (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { id: containerId, key: containerKey },\r\n            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { ref: ref, style: { display: \"contents\" } }))) : (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", { ref: ref, style: { display: \"contents\" }, key: containerKey })),\r\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Copyright, { href: copyrightProps.href, spanText: copyrightProps.spanText, text: copyrightProps.text, copyrightStyles: copyrightProps.copyrightStyles })));\r\n};\n\nvar AdvancedRealTimeChart = function (_a) {\r\n    var _b = _a.width, width = _b === void 0 ? 980 : _b, _c = _a.height, height = _c === void 0 ? 610 : _c, _d = _a.autosize, autosize = _d === void 0 ? false : _d, _e = _a.symbol, symbol = _e === void 0 ? \"NASDAQ:AAPL\" : _e, _f = _a.interval, interval = _f === void 0 ? \"1\" : _f, _g = _a.range, range = _g === void 0 ? undefined : _g, _h = _a.timezone, timezone = _h === void 0 ? \"UTC\" : _h, _j = _a.theme, theme = _j === void 0 ? \"light\" : _j, _k = _a.style, style = _k === void 0 ? \"1\" : _k, _l = _a.locale, locale = _l === void 0 ? \"en\" : _l, _m = _a.toolbar_bg, toolbar_bg = _m === void 0 ? \"#f1f3f6\" : _m, _o = _a.enable_publishing, enable_publishing = _o === void 0 ? false : _o, _p = _a.hide_top_toolbar, hide_top_toolbar = _p === void 0 ? false : _p, _q = _a.hide_legend, hide_legend = _q === void 0 ? false : _q, _r = _a.withdateranges, withdateranges = _r === void 0 ? true : _r, _s = _a.hide_side_toolbar, hide_side_toolbar = _s === void 0 ? false : _s, _t = _a.allow_symbol_change, allow_symbol_change = _t === void 0 ? true : _t, _u = _a.save_image, save_image = _u === void 0 ? true : _u, _v = _a.details, details = _v === void 0 ? false : _v, _w = _a.hotlist, hotlist = _w === void 0 ? false : _w, _x = _a.calendar, calendar = _x === void 0 ? false : _x, _y = _a.show_popup_button, show_popup_button = _y === void 0 ? false : _y, _z = _a.popup_width, popup_width = _z === void 0 ? \"600\" : _z, _0 = _a.popup_height, popup_height = _0 === void 0 ? \"400\" : _0, _1 = _a.watchlist, watchlist = _1 === void 0 ? undefined : _1, _2 = _a.studies, studies = _2 === void 0 ? undefined : _2, _3 = _a.disabled_features, disabled_features = _3 === void 0 ? undefined : _3, _4 = _a.enabled_features, enabled_features = _4 === void 0 ? undefined : _4, _5 = _a.container_id, container_id = _5 === void 0 ? \"tradingview_\".concat(createId(5)) : _5, _6 = _a.backgroundColor, backgroundColor = _6 === void 0 ? undefined : _6, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"width\", \"height\", \"autosize\", \"symbol\", \"interval\", \"range\", \"timezone\", \"theme\", \"style\", \"locale\", \"toolbar_bg\", \"enable_publishing\", \"hide_top_toolbar\", \"hide_legend\", \"withdateranges\", \"hide_side_toolbar\", \"allow_symbol_change\", \"save_image\", \"details\", \"hotlist\", \"calendar\", \"show_popup_button\", \"popup_width\", \"popup_height\", \"watchlist\", \"studies\", \"disabled_features\", \"enabled_features\", \"container_id\", \"backgroundColor\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { autosize: autosize, symbol: symbol }), (!range ? { interval: interval } : { range: range })), { timezone: timezone, theme: theme, style: style, locale: locale, toolbar_bg: toolbar_bg, enable_publishing: enable_publishing, hide_top_toolbar: hide_top_toolbar, hide_legend: hide_legend, withdateranges: withdateranges, hide_side_toolbar: hide_side_toolbar, allow_symbol_change: allow_symbol_change, save_image: save_image, details: details, hotlist: hotlist, calendar: calendar }), (show_popup_button && {\r\n            show_popup_button: show_popup_button,\r\n            popup_width: popup_width,\r\n            popup_height: popup_height,\r\n        })), { watchlist: watchlist, studies: studies, disabled_features: disabled_features, enabled_features: enabled_features, backgroundColor: backgroundColor, container_id: container_id }), props), scriptSRC: \"https://s3.tradingview.com/tv.js\", containerId: container_id, type: \"Widget\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/symbols/\".concat(symbol),\r\n            spanText: \"\".concat(symbol, \" Chart\"),\r\n        } }));\r\n};\r\nvar AdvancedRealTimeChart$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(AdvancedRealTimeChart);\n\nvar CompanyProfile = function (_a) {\r\n    var _b = _a.symbol, symbol = _b === void 0 ? \"NASDAQ:AAPL\" : _b, _c = _a.width, width = _c === void 0 ? 480 : _c, _d = _a.height, height = _d === void 0 ? 650 : _d, _e = _a.autosize, autosize = _e === void 0 ? false : _e, _f = _a.colorTheme, colorTheme = _f === void 0 ? \"light\" : _f, _g = _a.isTransparent, isTransparent = _g === void 0 ? false : _g, _h = _a.locale, locale = _h === void 0 ? \"en\" : _h, _j = _a.largeChartUrl, largeChartUrl = _j === void 0 ? undefined : _j, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"symbol\", \"width\", \"height\", \"autosize\", \"colorTheme\", \"isTransparent\", \"locale\", \"largeChartUrl\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign({}, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { symbol: symbol, colorTheme: colorTheme, isTransparent: isTransparent, locale: locale, largeChartUrl: largeChartUrl }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-symbol-profile.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/symbols/\".concat(symbol, \"/\"),\r\n            spanText: \"\".concat(symbol, \" Profile\"),\r\n        } }));\r\n};\r\nvar CompanyProfile$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(CompanyProfile);\n\nvar CryptoCurrencyMarket = function (_a) {\r\n    var _b = _a.width, width = _b === void 0 ? 1000 : _b, _c = _a.height, height = _c === void 0 ? 490 : _c, _d = _a.autosize, autosize = _d === void 0 ? false : _d, _e = _a.defaultColumn, defaultColumn = _e === void 0 ? \"overview\" : _e, _f = _a.screener_type, screener_type = _f === void 0 ? \"crypto_mkt\" : _f, _g = _a.displayCurrency, displayCurrency = _g === void 0 ? \"USD\" : _g, _h = _a.colorTheme, colorTheme = _h === void 0 ? \"light\" : _h, _j = _a.locale, locale = _j === void 0 ? \"en\" : _j, _k = _a.isTransparent, isTransparent = _k === void 0 ? false : _k, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"width\", \"height\", \"autosize\", \"defaultColumn\", \"screener_type\", \"displayCurrency\", \"colorTheme\", \"locale\", \"isTransparent\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign({}, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { defaultColumn: defaultColumn, screener_type: screener_type, displayCurrency: displayCurrency, colorTheme: colorTheme, locale: locale, isTransparent: isTransparent }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-screener.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/markets/cryptocurrencies/prices-all/\",\r\n            spanText: \"Cryptocurrency Markets\",\r\n        } }));\r\n};\r\nvar CryptoCurrencyMarket$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(CryptoCurrencyMarket);\n\nvar EconomicCalendar = function (_a) {\r\n    var _b = _a.colorTheme, colorTheme = _b === void 0 ? \"light\" : _b, _c = _a.isTransparent, isTransparent = _c === void 0 ? false : _c, _d = _a.width, width = _d === void 0 ? 510 : _d, _e = _a.height, height = _e === void 0 ? 600 : _e, _f = _a.autosize, autosize = _f === void 0 ? false : _f, _g = _a.locale, locale = _g === void 0 ? \"en\" : _g, _h = _a.importanceFilter, importanceFilter = _h === void 0 ? \"-1,0,1\" : _h, _j = _a.countryFilter, countryFilter = _j === void 0 ? undefined : _j, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"colorTheme\", \"isTransparent\", \"width\", \"height\", \"autosize\", \"locale\", \"importanceFilter\", \"countryFilter\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign({ colorTheme: colorTheme, isTransparent: isTransparent }, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { locale: locale, importanceFilter: importanceFilter, countryFilter: countryFilter }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-events.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/markets/currencies/economic-calendar/\",\r\n            spanText: \"Economic Calendar\",\r\n        } }));\r\n};\r\nvar EconomicCalendar$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(EconomicCalendar);\n\nvar defaultCurrencies$1 = [\r\n    \"EUR\",\r\n    \"USD\",\r\n    \"JPY\",\r\n    \"GBP\",\r\n    \"CHF\",\r\n    \"AUD\",\r\n    \"CAD\",\r\n    \"NZD\",\r\n    \"CNY\",\r\n];\r\nvar ForexCrossRates = function (_a) {\r\n    var _b = _a.width, width = _b === void 0 ? 770 : _b, _c = _a.height, height = _c === void 0 ? 400 : _c, _d = _a.autosize, autosize = _d === void 0 ? false : _d, _e = _a.currencies, currencies = _e === void 0 ? defaultCurrencies$1 : _e, _f = _a.isTransparent, isTransparent = _f === void 0 ? false : _f, _g = _a.colorTheme, colorTheme = _g === void 0 ? \"light\" : _g, _h = _a.locale, locale = _h === void 0 ? \"en\" : _h, _j = _a.largeChartUrl, largeChartUrl = _j === void 0 ? undefined : _j, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"width\", \"height\", \"autosize\", \"currencies\", \"isTransparent\", \"colorTheme\", \"locale\", \"largeChartUrl\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign({}, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { currencies: currencies, isTransparent: isTransparent, colorTheme: colorTheme, locale: locale, largeChartUrl: largeChartUrl }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-forex-cross-rates.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/markets/currencies/forex-cross-rates/\",\r\n            spanText: \"Exchange Rates\",\r\n        } }));\r\n};\r\nvar ForexCrossRates$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(ForexCrossRates);\n\nvar defaultCurrencies = [\r\n    \"EUR\",\r\n    \"USD\",\r\n    \"JPY\",\r\n    \"GBP\",\r\n    \"CHF\",\r\n    \"AUD\",\r\n    \"CAD\",\r\n    \"NZD\",\r\n    \"CNY\",\r\n];\r\nvar ForexHeatMap = function (_a) {\r\n    var _b = _a.width, width = _b === void 0 ? 700 : _b, _c = _a.height, height = _c === void 0 ? 400 : _c, _d = _a.autosize, autosize = _d === void 0 ? false : _d, _e = _a.currencies, currencies = _e === void 0 ? defaultCurrencies : _e, _f = _a.isTransparent, isTransparent = _f === void 0 ? false : _f, _g = _a.colorTheme, colorTheme = _g === void 0 ? \"light\" : _g, _h = _a.locale, locale = _h === void 0 ? \"en\" : _h, _j = _a.largeChartUrl, largeChartUrl = _j === void 0 ? undefined : _j, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"width\", \"height\", \"autosize\", \"currencies\", \"isTransparent\", \"colorTheme\", \"locale\", \"largeChartUrl\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign({}, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { currencies: currencies, isTransparent: isTransparent, colorTheme: colorTheme, locale: locale, largeChartUrl: largeChartUrl }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-forex-heat-map.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/markets/currencies/forex-heat-map/\",\r\n            spanText: \"Forex Heat Map\",\r\n        } }));\r\n};\r\nvar ForexHeatMap$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(ForexHeatMap);\n\nvar FundamentalData = function (_a) {\r\n    var _b = _a.symbol, symbol = _b === void 0 ? \"NASDAQ:AAPL\" : _b, _c = _a.colorTheme, colorTheme = _c === void 0 ? \"light\" : _c, _d = _a.isTransparent, isTransparent = _d === void 0 ? false : _d, _e = _a.largeChartUrl, largeChartUrl = _e === void 0 ? undefined : _e, _f = _a.displayMode, displayMode = _f === void 0 ? \"regular\" : _f, _g = _a.width, width = _g === void 0 ? 480 : _g, _h = _a.height, height = _h === void 0 ? 830 : _h, _j = _a.autosize, autosize = _j === void 0 ? false : _j, _k = _a.locale, locale = _k === void 0 ? \"en\" : _k, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"symbol\", \"colorTheme\", \"isTransparent\", \"largeChartUrl\", \"displayMode\", \"width\", \"height\", \"autosize\", \"locale\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign({}, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { symbol: symbol, colorTheme: colorTheme, isTransparent: isTransparent, largeChartUrl: largeChartUrl, displayMode: displayMode, locale: locale }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-financials.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/symbols/\".concat(symbol.replace(\":\", \"-\"), \"/financials-overview/\"),\r\n            spanText: \"\".concat(symbol, \" Fundamental Data\"),\r\n        } }));\r\n};\r\nvar FundamentalData$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(FundamentalData);\n\nvar defaultSymbolGroup = [\r\n    {\r\n        name: \"Indices\",\r\n        originalName: \"Indices\",\r\n        symbols: [\r\n            {\r\n                name: \"FOREXCOM:SPXUSD\",\r\n                displayName: \"S&P 500\",\r\n            },\r\n            {\r\n                name: \"FOREXCOM:NSXUSD\",\r\n                displayName: \"Nasdaq 100\",\r\n            },\r\n            {\r\n                name: \"FOREXCOM:DJI\",\r\n                displayName: \"Dow 30\",\r\n            },\r\n            {\r\n                name: \"INDEX:NKY\",\r\n                displayName: \"Nikkei 225\",\r\n            },\r\n            {\r\n                name: \"INDEX:DEU30\",\r\n                displayName: \"DAX Index\",\r\n            },\r\n            {\r\n                name: \"FOREXCOM:UKXGBP\",\r\n                displayName: \"UK 100\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: \"Commodities\",\r\n        originalName: \"Commodities\",\r\n        symbols: [\r\n            {\r\n                name: \"CME_MINI:ES1!\",\r\n                displayName: \"S&P 500\",\r\n            },\r\n            {\r\n                name: \"CME:6E1!\",\r\n                displayName: \"Euro\",\r\n            },\r\n            {\r\n                name: \"COMEX:GC1!\",\r\n                displayName: \"Gold\",\r\n            },\r\n            {\r\n                name: \"NYMEX:CL1!\",\r\n                displayName: \"Crude Oil\",\r\n            },\r\n            {\r\n                name: \"NYMEX:NG1!\",\r\n                displayName: \"Natural Gas\",\r\n            },\r\n            {\r\n                name: \"CBOT:ZC1!\",\r\n                displayName: \"Corn\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: \"Bonds\",\r\n        originalName: \"Bonds\",\r\n        symbols: [\r\n            {\r\n                name: \"CME:GE1!\",\r\n                displayName: \"Eurodollar\",\r\n            },\r\n            {\r\n                name: \"CBOT:ZB1!\",\r\n                displayName: \"T-Bond\",\r\n            },\r\n            {\r\n                name: \"CBOT:UB1!\",\r\n                displayName: \"Ultra T-Bond\",\r\n            },\r\n            {\r\n                name: \"EUREX:FGBL1!\",\r\n                displayName: \"Euro Bund\",\r\n            },\r\n            {\r\n                name: \"EUREX:FBTP1!\",\r\n                displayName: \"Euro BTP\",\r\n            },\r\n            {\r\n                name: \"EUREX:FGBM1!\",\r\n                displayName: \"Euro BOBL\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        name: \"Forex\",\r\n        originalName: \"Forex\",\r\n        symbols: [\r\n            {\r\n                name: \"FX:EURUSD\",\r\n            },\r\n            {\r\n                name: \"FX:GBPUSD\",\r\n            },\r\n            {\r\n                name: \"FX:USDJPY\",\r\n            },\r\n            {\r\n                name: \"FX:USDCHF\",\r\n            },\r\n            {\r\n                name: \"FX:AUDUSD\",\r\n            },\r\n            {\r\n                name: \"FX:USDCAD\",\r\n            },\r\n        ],\r\n    },\r\n];\r\nvar MarketData = function (_a) {\r\n    var _b = _a.width, width = _b === void 0 ? 770 : _b, _c = _a.height, height = _c === void 0 ? 450 : _c, _d = _a.autosize, autosize = _d === void 0 ? false : _d, _e = _a.symbolsGroups, symbolsGroups = _e === void 0 ? defaultSymbolGroup : _e, _f = _a.showSymbolLogo, showSymbolLogo = _f === void 0 ? true : _f, _g = _a.colorTheme, colorTheme = _g === void 0 ? \"light\" : _g, _h = _a.isTransparent, isTransparent = _h === void 0 ? false : _h, _j = _a.locale, locale = _j === void 0 ? \"en\" : _j, _k = _a.largeChartUrl, largeChartUrl = _k === void 0 ? undefined : _k, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"width\", \"height\", \"autosize\", \"symbolsGroups\", \"showSymbolLogo\", \"colorTheme\", \"isTransparent\", \"locale\", \"largeChartUrl\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign({}, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { symbolsGroups: symbolsGroups, showSymbolLogo: showSymbolLogo, colorTheme: colorTheme, isTransparent: isTransparent, locale: locale, largeChartUrl: largeChartUrl }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-market-quotes.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            spanText: \"Financial Markets\",\r\n            href: \"https://www.tradingview.com/markets/\",\r\n        } }));\r\n};\r\nvar MarketData$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(MarketData);\n\nvar defaultTabs = [\r\n    {\r\n        title: \"Indices\",\r\n        symbols: [\r\n            {\r\n                s: \"FOREXCOM:SPXUSD\",\r\n                d: \"S&P 500\",\r\n            },\r\n            {\r\n                s: \"FOREXCOM:NSXUSD\",\r\n                d: \"Nasdaq 100\",\r\n            },\r\n            {\r\n                s: \"FOREXCOM:DJI\",\r\n                d: \"Dow 30\",\r\n            },\r\n            {\r\n                s: \"INDEX:NKY\",\r\n                d: \"Nikkei 225\",\r\n            },\r\n            {\r\n                s: \"INDEX:DEU30\",\r\n                d: \"DAX Index\",\r\n            },\r\n            {\r\n                s: \"FOREXCOM:UKXGBP\",\r\n                d: \"UK 100\",\r\n            },\r\n        ],\r\n        originalTitle: \"Indices\",\r\n    },\r\n    {\r\n        title: \"Commodities\",\r\n        symbols: [\r\n            {\r\n                s: \"CME_MINI:ES1!\",\r\n                d: \"S&P 500\",\r\n            },\r\n            {\r\n                s: \"CME:6E1!\",\r\n                d: \"Euro\",\r\n            },\r\n            {\r\n                s: \"COMEX:GC1!\",\r\n                d: \"Gold\",\r\n            },\r\n            {\r\n                s: \"NYMEX:CL1!\",\r\n                d: \"Crude Oil\",\r\n            },\r\n            {\r\n                s: \"NYMEX:NG1!\",\r\n                d: \"Natural Gas\",\r\n            },\r\n            {\r\n                s: \"CBOT:ZC1!\",\r\n                d: \"Corn\",\r\n            },\r\n        ],\r\n        originalTitle: \"Commodities\",\r\n    },\r\n    {\r\n        title: \"Bonds\",\r\n        symbols: [\r\n            {\r\n                s: \"CME:GE1!\",\r\n                d: \"Eurodollar\",\r\n            },\r\n            {\r\n                s: \"CBOT:ZB1!\",\r\n                d: \"T-Bond\",\r\n            },\r\n            {\r\n                s: \"CBOT:UB1!\",\r\n                d: \"Ultra T-Bond\",\r\n            },\r\n            {\r\n                s: \"EUREX:FGBL1!\",\r\n                d: \"Euro Bund\",\r\n            },\r\n            {\r\n                s: \"EUREX:FBTP1!\",\r\n                d: \"Euro BTP\",\r\n            },\r\n            {\r\n                s: \"EUREX:FGBM1!\",\r\n                d: \"Euro BOBL\",\r\n            },\r\n        ],\r\n        originalTitle: \"Bonds\",\r\n    },\r\n    {\r\n        title: \"Forex\",\r\n        symbols: [\r\n            {\r\n                s: \"FX:EURUSD\",\r\n            },\r\n            {\r\n                s: \"FX:GBPUSD\",\r\n            },\r\n            {\r\n                s: \"FX:USDJPY\",\r\n            },\r\n            {\r\n                s: \"FX:USDCHF\",\r\n            },\r\n            {\r\n                s: \"FX:AUDUSD\",\r\n            },\r\n            {\r\n                s: \"FX:USDCAD\",\r\n            },\r\n        ],\r\n        originalTitle: \"Forex\",\r\n    },\r\n];\r\nvar MarketOverview = function (_a) {\r\n    var _b = _a.colorTheme, colorTheme = _b === void 0 ? \"light\" : _b, _c = _a.dateRange, dateRange = _c === void 0 ? \"12M\" : _c, _d = _a.showChart, showChart = _d === void 0 ? true : _d, _e = _a.locale, locale = _e === void 0 ? \"en\" : _e, _f = _a.largeChartUrl, largeChartUrl = _f === void 0 ? undefined : _f, _g = _a.isTransparent, isTransparent = _g === void 0 ? false : _g, _h = _a.showSymbolLogo, showSymbolLogo = _h === void 0 ? true : _h, _j = _a.showFloatingTooltip, showFloatingTooltip = _j === void 0 ? false : _j, _k = _a.width, width = _k === void 0 ? 400 : _k, _l = _a.height, height = _l === void 0 ? 660 : _l, _m = _a.autosize, autosize = _m === void 0 ? false : _m, _o = _a.plotLineColorGrowing, plotLineColorGrowing = _o === void 0 ? \"rgba(33, 150, 243, 1)\" : _o, _p = _a.plotLineColorFalling, plotLineColorFalling = _p === void 0 ? \"rgba(33, 150, 243, 1)\" : _p, _q = _a.gridLineColor, gridLineColor = _q === void 0 ? \"rgba(240, 243, 250, 1)\" : _q, _r = _a.scaleFontColor, scaleFontColor = _r === void 0 ? \"rgba(120, 123, 134, 1)\" : _r, _s = _a.belowLineFillColorGrowing, belowLineFillColorGrowing = _s === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _s, _t = _a.belowLineFillColorFalling, belowLineFillColorFalling = _t === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _t, _u = _a.belowLineFillColorGrowingBottom, belowLineFillColorGrowingBottom = _u === void 0 ? \"rgba(41, 98, 255, 0)\" : _u, _v = _a.belowLineFillColorFallingBottom, belowLineFillColorFallingBottom = _v === void 0 ? \"rgba(41, 98, 255, 0)\" : _v, _w = _a.symbolActiveColor, symbolActiveColor = _w === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _w, _x = _a.tabs, tabs = _x === void 0 ? defaultTabs : _x, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"colorTheme\", \"dateRange\", \"showChart\", \"locale\", \"largeChartUrl\", \"isTransparent\", \"showSymbolLogo\", \"showFloatingTooltip\", \"width\", \"height\", \"autosize\", \"plotLineColorGrowing\", \"plotLineColorFalling\", \"gridLineColor\", \"scaleFontColor\", \"belowLineFillColorGrowing\", \"belowLineFillColorFalling\", \"belowLineFillColorGrowingBottom\", \"belowLineFillColorFallingBottom\", \"symbolActiveColor\", \"tabs\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign(__assign({ colorTheme: colorTheme, dateRange: dateRange, showChart: showChart, locale: locale, largeChartUrl: largeChartUrl, isTransparent: isTransparent, showSymbolLogo: showSymbolLogo, showFloatingTooltip: showFloatingTooltip }, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), (showChart && {\r\n            plotLineColorGrowing: plotLineColorGrowing,\r\n            plotLineColorFalling: plotLineColorFalling,\r\n            gridLineColor: gridLineColor,\r\n            scaleFontColor: scaleFontColor,\r\n            belowLineFillColorGrowing: belowLineFillColorGrowing,\r\n            belowLineFillColorFalling: belowLineFillColorFalling,\r\n            belowLineFillColorGrowingBottom: belowLineFillColorGrowingBottom,\r\n            belowLineFillColorFallingBottom: belowLineFillColorFallingBottom,\r\n            symbolActiveColor: symbolActiveColor,\r\n        })), { tabs: tabs }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            spanText: \"Financial Markets\",\r\n            href: \"https://www.tradingview.com/markets/\",\r\n        } }));\r\n};\r\nvar MarketOverview$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(MarketOverview);\n\nvar MiniChart = function (_a) {\r\n    var _b = _a.symbol, symbol = _b === void 0 ? \"FX:EURUSD\" : _b, _c = _a.width, width = _c === void 0 ? 350 : _c, _d = _a.height, height = _d === void 0 ? 220 : _d, _e = _a.locale, locale = _e === void 0 ? \"en\" : _e, _f = _a.dateRange, dateRange = _f === void 0 ? \"12M\" : _f, _g = _a.colorTheme, colorTheme = _g === void 0 ? \"light\" : _g, _h = _a.trendLineColor, trendLineColor = _h === void 0 ? \"rgba(41, 98, 255, 1)\" : _h, _j = _a.underLineColor, underLineColor = _j === void 0 ? \"rgba(41, 98, 255, 0.3)\" : _j, _k = _a.underLineBottomColor, underLineBottomColor = _k === void 0 ? \"rgba(41, 98, 255, 0)\" : _k, _l = _a.isTransparent, isTransparent = _l === void 0 ? false : _l, _m = _a.autosize, autosize = _m === void 0 ? false : _m, _o = _a.largeChartUrl, largeChartUrl = _o === void 0 ? undefined : _o, _p = _a.chartOnly, chartOnly = _p === void 0 ? false : _p, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"symbol\", \"width\", \"height\", \"locale\", \"dateRange\", \"colorTheme\", \"trendLineColor\", \"underLineColor\", \"underLineBottomColor\", \"isTransparent\", \"autosize\", \"largeChartUrl\", \"chartOnly\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign({ symbol: symbol }, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { locale: locale, dateRange: dateRange, colorTheme: colorTheme, trendLineColor: trendLineColor, underLineColor: underLineColor, underLineBottomColor: underLineBottomColor, isTransparent: isTransparent, autosize: autosize, largeChartUrl: largeChartUrl, chartOnly: chartOnly }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-mini-symbol-overview.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/symbols/\".concat(symbol, \"/\"),\r\n            spanText: \"\".concat(symbol, \" Rates\"),\r\n        } }));\r\n};\r\nvar MiniChart$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(MiniChart);\n\nvar Screener = function (_a) {\r\n    var _b = _a.width, width = _b === void 0 ? 1100 : _b, _c = _a.height, height = _c === void 0 ? 512 : _c, _d = _a.autosize, autosize = _d === void 0 ? false : _d, _e = _a.defaultColumn, defaultColumn = _e === void 0 ? \"overview\" : _e, _f = _a.defaultScreen, defaultScreen = _f === void 0 ? \"general\" : _f, _g = _a.market, market = _g === void 0 ? \"forex\" : _g, _h = _a.showToolbar, showToolbar = _h === void 0 ? true : _h, _j = _a.colorTheme, colorTheme = _j === void 0 ? \"light\" : _j, _k = _a.locale, locale = _k === void 0 ? \"en\" : _k, _l = _a.isTransparent, isTransparent = _l === void 0 ? false : _l, _m = _a.largeChartUrl, largeChartUrl = _m === void 0 ? undefined : _m, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"width\", \"height\", \"autosize\", \"defaultColumn\", \"defaultScreen\", \"market\", \"showToolbar\", \"colorTheme\", \"locale\", \"isTransparent\", \"largeChartUrl\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign({}, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { defaultColumn: defaultColumn, defaultScreen: defaultScreen, market: market, showToolbar: showToolbar, colorTheme: colorTheme, locale: locale, isTransparent: isTransparent, largeChartUrl: largeChartUrl }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-screener.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/forex-screener/\",\r\n            spanText: \"Forex Screener\",\r\n        } }));\r\n};\r\nvar Screener$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(Screener);\n\nvar SingleTicker = function (_a) {\r\n    var _b = _a.symbol, symbol = _b === void 0 ? \"FX:EURUSD\" : _b, _c = _a.width, width = _c === void 0 ? 350 : _c, _d = _a.autosize, autosize = _d === void 0 ? false : _d, _e = _a.colorTheme, colorTheme = _e === void 0 ? \"light\" : _e, _f = _a.isTransparent, isTransparent = _f === void 0 ? false : _f, _g = _a.locale, locale = _g === void 0 ? \"en\" : _g, _h = _a.largeChartUrl, largeChartUrl = _h === void 0 ? undefined : _h, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"symbol\", \"width\", \"autosize\", \"colorTheme\", \"isTransparent\", \"locale\", \"largeChartUrl\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign({ symbol: symbol }, (!autosize ? { width: width } : { width: \"100%\" })), { colorTheme: colorTheme, isTransparent: isTransparent, locale: locale, largeChartUrl: largeChartUrl }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-single-quote.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/symbols/\".concat(symbol, \"/\"),\r\n            spanText: \"\".concat(symbol, \" Rates\"),\r\n        } }));\r\n};\r\nvar SingleTicker$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(SingleTicker);\n\nvar StockMarket = function (_a) {\r\n    var _b = _a.colorTheme, colorTheme = _b === void 0 ? \"light\" : _b, _c = _a.dateRange, dateRange = _c === void 0 ? \"12M\" : _c, _d = _a.exchange, exchange = _d === void 0 ? \"US\" : _d, _e = _a.showChart, showChart = _e === void 0 ? true : _e, _f = _a.locale, locale = _f === void 0 ? \"en\" : _f, _g = _a.largeChartUrl, largeChartUrl = _g === void 0 ? undefined : _g, _h = _a.isTransparent, isTransparent = _h === void 0 ? false : _h, _j = _a.showSymbolLogo, showSymbolLogo = _j === void 0 ? true : _j; _a.showFloatingTooltip; var _l = _a.width, width = _l === void 0 ? 400 : _l, _m = _a.height, height = _m === void 0 ? 600 : _m, _o = _a.autosize, autosize = _o === void 0 ? false : _o, _p = _a.plotLineColorGrowing, plotLineColorGrowing = _p === void 0 ? \"rgba(33, 150, 243, 1)\" : _p, _q = _a.plotLineColorFalling, plotLineColorFalling = _q === void 0 ? \"rgba(33, 150, 243, 1)\" : _q, _r = _a.gridLineColor, gridLineColor = _r === void 0 ? \"rgba(240, 243, 250, 1)\" : _r, _s = _a.scaleFontColor, scaleFontColor = _s === void 0 ? \"rgba(120, 123, 134, 1)\" : _s, _t = _a.belowLineFillColorGrowing, belowLineFillColorGrowing = _t === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _t, _u = _a.belowLineFillColorFalling, belowLineFillColorFalling = _u === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _u, _v = _a.belowLineFillColorGrowingBottom, belowLineFillColorGrowingBottom = _v === void 0 ? \"rgba(41, 98, 255, 0)\" : _v, _w = _a.belowLineFillColorFallingBottom, belowLineFillColorFallingBottom = _w === void 0 ? \"rgba(41, 98, 255, 0)\" : _w, _x = _a.symbolActiveColor, symbolActiveColor = _x === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _x, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"colorTheme\", \"dateRange\", \"exchange\", \"showChart\", \"locale\", \"largeChartUrl\", \"isTransparent\", \"showSymbolLogo\", \"showFloatingTooltip\", \"width\", \"height\", \"autosize\", \"plotLineColorGrowing\", \"plotLineColorFalling\", \"gridLineColor\", \"scaleFontColor\", \"belowLineFillColorGrowing\", \"belowLineFillColorFalling\", \"belowLineFillColorGrowingBottom\", \"belowLineFillColorFallingBottom\", \"symbolActiveColor\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign({ colorTheme: colorTheme, dateRange: dateRange, exchange: exchange, showChart: showChart, locale: locale, largeChartUrl: largeChartUrl, isTransparent: isTransparent, showSymbolLogo: showSymbolLogo }, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), (showChart && {\r\n            plotLineColorGrowing: plotLineColorGrowing,\r\n            plotLineColorFalling: plotLineColorFalling,\r\n            gridLineColor: gridLineColor,\r\n            scaleFontColor: scaleFontColor,\r\n            belowLineFillColorGrowing: belowLineFillColorGrowing,\r\n            belowLineFillColorFalling: belowLineFillColorFalling,\r\n            belowLineFillColorGrowingBottom: belowLineFillColorGrowingBottom,\r\n            belowLineFillColorFallingBottom: belowLineFillColorFallingBottom,\r\n            symbolActiveColor: symbolActiveColor,\r\n        })), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-hotlists.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/markets/stocks-usa/\",\r\n            spanText: \"Stock market Today\",\r\n        } }));\r\n};\r\nvar StockMarket$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(StockMarket);\n\nvar SymbolInfo = function (_a) {\r\n    var _b = _a.symbol, symbol = _b === void 0 ? \"NASDAQ:AAPL\" : _b, _c = _a.width, width = _c === void 0 ? 1000 : _c, _d = _a.autosize, autosize = _d === void 0 ? false : _d, _e = _a.locale, locale = _e === void 0 ? \"en\" : _e, _f = _a.colorTheme, colorTheme = _f === void 0 ? \"light\" : _f, _g = _a.isTransparent, isTransparent = _g === void 0 ? false : _g, _h = _a.largeChartUrl, largeChartUrl = _h === void 0 ? undefined : _h, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"symbol\", \"width\", \"autosize\", \"locale\", \"colorTheme\", \"isTransparent\", \"largeChartUrl\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign({ symbol: symbol }, (!autosize ? { width: width } : { width: \"100%\" })), { locale: locale, colorTheme: colorTheme, isTransparent: isTransparent, largeChartUrl: largeChartUrl }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-symbol-info.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/symbols/\".concat(symbol, \"/\"),\r\n            spanText: \"\".concat(symbol, \" Profile\"),\r\n        } }));\r\n};\r\nvar SymbolInfo$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(SymbolInfo);\n\nvar defaultSymbols$2 = [\r\n    [\"Apple\", \"AAPL\"],\r\n    [\"Google\", \"GOOGL\"],\r\n    [\"Microsoft\", \"MSFT\"],\r\n];\r\nvar SymbolOverview = function (_a) {\r\n    var _b = _a.symbols, symbols = _b === void 0 ? defaultSymbols$2 : _b, _c = _a.chartOnly, chartOnly = _c === void 0 ? false : _c, _d = _a.width, width = _d === void 0 ? 1000 : _d, _e = _a.height, height = _e === void 0 ? 400 : _e, _f = _a.locale, locale = _f === void 0 ? \"en\" : _f, _g = _a.colorTheme, colorTheme = _g === void 0 ? \"light\" : _g, _h = _a.fontColor, fontColor = _h === void 0 ? \"#787B86\" : _h, _j = _a.fontSize, fontSize = _j === void 0 ? \"10\" : _j, _k = _a.isTransparent, isTransparent = _k === void 0 ? false : _k, _l = _a.showFloatingTooltip, showFloatingTooltip = _l === void 0 ? true : _l, _m = _a.scalePosition, scalePosition = _m === void 0 ? \"no\" : _m, _o = _a.scaleMode, scaleMode = _o === void 0 ? \"Normal\" : _o, _p = _a.fontFamily, fontFamily = _p === void 0 ? \"Trebuchet MS, sans-serif\" : _p, _q = _a.noTimeScale, noTimeScale = _q === void 0 ? false : _q, _r = _a.valuesTracking, valuesTracking = _r === void 0 ? \"1\" : _r, _s = _a.lineWidth, lineWidth = _s === void 0 ? 3 : _s, _t = _a.showVolume, showVolume = _t === void 0 ? false : _t, _u = _a.volumeUpColor, volumeUpColor = _u === void 0 ? \"rgba(34, 171, 148, 0.5)\" : _u, _v = _a.volumeDownColor, volumeDownColor = _v === void 0 ? \"rgba(247, 82, 95, 0.5)\" : _v, _w = _a.dateFormat, dateFormat = _w === void 0 ? \"dd MMM 'yy\" : _w, _x = _a.timeHoursFormat, timeHoursFormat = _x === void 0 ? \"24-hours\" : _x, _y = _a.hideMarketStatus, hideMarketStatus = _y === void 0 ? false : _y, _z = _a.hideDateRanges, hideDateRanges = _z === void 0 ? false : _z, _0 = _a.chartType, chartType = _0 === void 0 ? \"area\" : _0, \r\n    //area\r\n    _1 = _a.lineColor, \r\n    //area\r\n    lineColor = _1 === void 0 ? \"#2962FF\" : _1, _2 = _a.bottomColor, bottomColor = _2 === void 0 ? \"rgba(41, 98, 255, 0)\" : _2, _3 = _a.topColor, topColor = _3 === void 0 ? \"rgba(41, 98, 255, 0.3)\" : _3, \r\n    //bars & candles\r\n    _4 = _a.upColor, \r\n    //bars & candles\r\n    upColor = _4 === void 0 ? \"#26a69a\" : _4, _5 = _a.downColor, downColor = _5 === void 0 ? \"#ef5350\" : _5, \r\n    //candles\r\n    _6 = _a.borderUpColor, \r\n    //candles\r\n    borderUpColor = _6 === void 0 ? \"#26a69a\" : _6, _7 = _a.borderDownColor, borderDownColor = _7 === void 0 ? \"#ef5350\" : _7, _8 = _a.wickUpColor, wickUpColor = _8 === void 0 ? \"#26a69a\" : _8, _9 = _a.wickDownColor, wickDownColor = _9 === void 0 ? \"#ef5350\" : _9, _10 = _a.backgroundColor, backgroundColor = _10 === void 0 ? \"rgba(19, 23, 34, 0)\" : _10, _11 = _a.gridLineColor, gridLineColor = _11 === void 0 ? \"rgba(42, 46, 57, 0)\" : _11, _12 = _a.widgetFontColor, widgetFontColor = _12 === void 0 ? \"rgba(216, 216, 216, 1)\" : _12, _13 = _a.autosize, autosize = _13 === void 0 ? false : _13, _14 = _a.container_id, container_id = _14 === void 0 ? \"tradingview_\".concat(createId(5)) : _14; _a.copyrightStyles; var props = __rest(_a, [\"symbols\", \"chartOnly\", \"width\", \"height\", \"locale\", \"colorTheme\", \"fontColor\", \"fontSize\", \"isTransparent\", \"showFloatingTooltip\", \"scalePosition\", \"scaleMode\", \"fontFamily\", \"noTimeScale\", \"valuesTracking\", \"lineWidth\", \"showVolume\", \"volumeUpColor\", \"volumeDownColor\", \"dateFormat\", \"timeHoursFormat\", \"hideMarketStatus\", \"hideDateRanges\", \"chartType\", \"lineColor\", \"bottomColor\", \"topColor\", \"upColor\", \"downColor\", \"borderUpColor\", \"borderDownColor\", \"wickUpColor\", \"wickDownColor\", \"backgroundColor\", \"gridLineColor\", \"widgetFontColor\", \"autosize\", \"container_id\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ symbols: symbols, chartOnly: chartOnly }, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { locale: locale, colorTheme: colorTheme, fontColor: fontColor, fontSize: fontSize, isTransparent: isTransparent, showFloatingTooltip: showFloatingTooltip, scalePosition: scalePosition, scaleMode: scaleMode, fontFamily: fontFamily, noTimeScale: noTimeScale, hideDateRanges: hideDateRanges, hideMarketStatus: hideMarketStatus, valuesTracking: valuesTracking, lineWidth: lineWidth, showVolume: showVolume }), (showVolume && { volumeUpColor: volumeUpColor, volumeDownColor: volumeDownColor })), { dateFormat: dateFormat, timeHoursFormat: timeHoursFormat, chartType: chartType }), (chartType === \"line\" && { lineColor: lineColor })), (chartType === \"area\" && { lineColor: lineColor, bottomColor: bottomColor, topColor: topColor })), ((chartType === \"bars\" || chartType === \"candlesticks\") && {\r\n            upColor: upColor,\r\n            downColor: downColor,\r\n        })), (chartType === \"candlesticks\" && {\r\n            upColor: upColor,\r\n            downColor: downColor,\r\n            borderUpColor: borderUpColor,\r\n            borderDownColor: borderDownColor,\r\n            wickUpColor: wickUpColor,\r\n            wickDownColor: wickDownColor,\r\n        })), { backgroundColor: backgroundColor, widgetFontColor: widgetFontColor, gridLineColor: gridLineColor, autosize: autosize, container_id: container_id }), props), scriptSRC: \"https://s3.tradingview.com/tv.js\", containerId: container_id, type: \"MediumWidget\", copyrightProps: {\r\n            href: \"https://www.tradingview.com/symbols/\".concat(symbols[0][1]),\r\n            spanText: \"\".concat(symbols[0][1]),\r\n        } }));\r\n};\r\nvar SymbolOverview$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(SymbolOverview);\n\nvar TechnicalAnalysis = function (_a) {\r\n    var _b = _a.interval, interval = _b === void 0 ? \"1m\" : _b, _c = _a.width, width = _c === void 0 ? 425 : _c, _d = _a.height, height = _d === void 0 ? 450 : _d, _e = _a.autosize, autosize = _e === void 0 ? false : _e, _f = _a.isTransparent, isTransparent = _f === void 0 ? false : _f, _g = _a.symbol, symbol = _g === void 0 ? \"NASDAQ:AAPL\" : _g, _h = _a.showIntervalTabs, showIntervalTabs = _h === void 0 ? true : _h, _j = _a.locale, locale = _j === void 0 ? \"en\" : _j, _k = _a.colorTheme, colorTheme = _k === void 0 ? \"light\" : _k, _l = _a.largeChartUrl, largeChartUrl = _l === void 0 ? undefined : _l, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"interval\", \"width\", \"height\", \"autosize\", \"isTransparent\", \"symbol\", \"showIntervalTabs\", \"locale\", \"colorTheme\", \"largeChartUrl\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign({ interval: interval }, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { isTransparent: isTransparent, symbol: symbol, showIntervalTabs: showIntervalTabs, locale: locale, colorTheme: colorTheme, largeChartUrl: largeChartUrl }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-technical-analysis.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/symbols/\".concat(symbol.replace(\":\", \"-\"), \"/technicals/\"),\r\n            spanText: \"Technical Analysis for \".concat(symbol),\r\n        } }));\r\n};\r\nvar TechnicalAnalysis$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(TechnicalAnalysis);\n\nvar defaultSymbols$1 = [\r\n    {\r\n        proName: \"FOREXCOM:SPXUSD\",\r\n        title: \"S&P 500\",\r\n    },\r\n    {\r\n        proName: \"FOREXCOM:NSXUSD\",\r\n        title: \"Nasdaq 100\",\r\n    },\r\n    {\r\n        proName: \"FX_IDC:EURUSD\",\r\n        title: \"EUR/USD\",\r\n    },\r\n    {\r\n        proName: \"BITSTAMP:BTCUSD\",\r\n        title: \"BTC/USD\",\r\n    },\r\n    {\r\n        proName: \"BITSTAMP:ETHUSD\",\r\n        title: \"ETH/USD\",\r\n    },\r\n];\r\nvar Ticker = function (_a) {\r\n    var _b = _a.colorTheme, colorTheme = _b === void 0 ? \"light\" : _b, _c = _a.isTransparent, isTransparent = _c === void 0 ? false : _c, _d = _a.showSymbolLogo, showSymbolLogo = _d === void 0 ? true : _d, _e = _a.locale, locale = _e === void 0 ? \"en\" : _e, _f = _a.symbols, symbols = _f === void 0 ? defaultSymbols$1 : _f, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"colorTheme\", \"isTransparent\", \"showSymbolLogo\", \"locale\", \"symbols\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign({ colorTheme: colorTheme, isTransparent: isTransparent, showSymbolLogo: showSymbolLogo, locale: locale, symbols: symbols }, props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-tickers.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/\",\r\n            spanText: \"Quotes\",\r\n        } }));\r\n};\r\nvar Ticker$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(Ticker);\n\nvar defaultSymbols = [\r\n    {\r\n        proName: \"FOREXCOM:SPXUSD\",\r\n        title: \"S&P 500\",\r\n    },\r\n    {\r\n        proName: \"FOREXCOM:NSXUSD\",\r\n        title: \"Nasdaq 100\",\r\n    },\r\n    {\r\n        proName: \"FX_IDC:EURUSD\",\r\n        title: \"EUR/USD\",\r\n    },\r\n    {\r\n        proName: \"BITSTAMP:BTCUSD\",\r\n        title: \"BTC/USD\",\r\n    },\r\n    {\r\n        proName: \"BITSTAMP:ETHUSD\",\r\n        title: \"ETH/USD\",\r\n    },\r\n];\r\nvar TickerTape = function (_a) {\r\n    var _b = _a.symbols, symbols = _b === void 0 ? defaultSymbols : _b, _c = _a.showSymbolLogo, showSymbolLogo = _c === void 0 ? true : _c, _d = _a.colorTheme, colorTheme = _d === void 0 ? \"light\" : _d, _e = _a.isTransparent, isTransparent = _e === void 0 ? false : _e, _f = _a.largeChartUrl, largeChartUrl = _f === void 0 ? undefined : _f, _g = _a.displayMode, displayMode = _g === void 0 ? \"adaptive\" : _g, _h = _a.locale, locale = _h === void 0 ? \"en\" : _h, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"symbols\", \"showSymbolLogo\", \"colorTheme\", \"isTransparent\", \"largeChartUrl\", \"displayMode\", \"locale\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign({ symbols: symbols, showSymbolLogo: showSymbolLogo, colorTheme: colorTheme, isTransparent: isTransparent, largeChartUrl: largeChartUrl, displayMode: displayMode, locale: locale }, props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/markets/\",\r\n            spanText: \"Markets\",\r\n        } }));\r\n};\r\nvar TickerTape$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(TickerTape);\n\nvar Timeline = function (_a) {\r\n    var _b = _a.feedMode, feedMode = _b === void 0 ? \"all_symbols\" : _b, _c = _a.colorTheme, colorTheme = _c === void 0 ? \"light\" : _c, _d = _a.isTransparent, isTransparent = _d === void 0 ? false : _d, _e = _a.displayMode, displayMode = _e === void 0 ? \"regular\" : _e, _f = _a.width, width = _f === void 0 ? 480 : _f, _g = _a.height, height = _g === void 0 ? 830 : _g, _h = _a.autosize, autosize = _h === void 0 ? false : _h, _j = _a.locale, locale = _j === void 0 ? \"en\" : _j, _k = _a.largeChartUrl, largeChartUrl = _k === void 0 ? undefined : _k, copyrightStyles = _a.copyrightStyles, _l = _a.symbol, symbol = _l === void 0 ? \"BTCUSD\" : _l, _m = _a.market, market = _m === void 0 ? \"crypto\" : _m, props = __rest(_a, [\"feedMode\", \"colorTheme\", \"isTransparent\", \"displayMode\", \"width\", \"height\", \"autosize\", \"locale\", \"largeChartUrl\", \"copyrightStyles\", \"symbol\", \"market\"]);\r\n    var _o = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\"), href = _o[0], sethref = _o[1];\r\n    var _p = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\"), spanText = _p[0], setspanText = _p[1];\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\r\n        if (feedMode == \"all_symbols\") {\r\n            sethref(\"key_events\");\r\n            setspanText(\"Daily news roundup\");\r\n        }\r\n        else if (feedMode == \"market\") {\r\n            switch (market) {\r\n                case \"crypto\":\r\n                    sethref(\"markets/cryptocurrencies/key-events/\");\r\n                    setspanText(\"Daily cryptocurrency news\");\r\n                    break;\r\n                case \"forex\":\r\n                    sethref(\"markets/currencies/key-events/\");\r\n                    setspanText(\"Daily currency news\");\r\n                    break;\r\n                case \"stock\":\r\n                    sethref(\"markets/stocks-usa/key-events/\");\r\n                    setspanText(\"Daily stock news\");\r\n                    break;\r\n                case \"index\":\r\n                    sethref(\"markets/indices/key-events/\");\r\n                    setspanText(\"Daily index news\");\r\n                    break;\r\n                case \"futures\":\r\n                    sethref(\"markets/futures/key-events/\");\r\n                    setspanText(\"Daily futures news\");\r\n                    break;\r\n                case \"cfd\":\r\n                    sethref(\"markets/bonds/key-events/\");\r\n                    setspanText(\"Daily bonds news\");\r\n                    break;\r\n            }\r\n        }\r\n        else if (feedMode == \"symbol\") {\r\n            sethref(\"symbols/\".concat(symbol, \"/history-timeline/\"));\r\n            setspanText(\"\".concat(symbol, \" History\"));\r\n        }\r\n    }, [feedMode, symbol, market]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign(__assign(__assign(__assign({}, (!autosize ? { width: width } : { width: \"100%\" })), (!autosize ? { height: height } : { height: \"100%\" })), { feedMode: feedMode }), (feedMode == \"market\"\r\n            ? { market: market }\r\n            : feedMode == \"symbol\"\r\n                ? { symbol: symbol }\r\n                : {})), { colorTheme: colorTheme, isTransparent: isTransparent, displayMode: displayMode, locale: locale, largeChartUrl: largeChartUrl }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-timeline.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/\".concat(href),\r\n            spanText: spanText,\r\n        } }));\r\n};\r\nvar Timeline$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(Timeline);\n\nvar StockHeatmap = function (_a) {\r\n    var _b = _a.dataSource, dataSource = _b === void 0 ? \"SPX500\" : _b, _c = _a.exchanges, exchanges = _c === void 0 ? [\"NYSE\"] : _c, _d = _a.grouping, grouping = _d === void 0 ? \"sector\" : _d, _e = _a.blockSize, blockSize = _e === void 0 ? \"market_cap_basic\" : _e, _f = _a.blockColor, blockColor = _f === void 0 ? \"change\" : _f, _g = _a.locale, locale = _g === void 0 ? \"en\" : _g, _h = _a.autoSize, autoSize = _h === void 0 ? false : _h, _j = _a.height, height = _j === void 0 ? undefined : _j, _k = _a.width, width = _k === void 0 ? undefined : _k, _l = _a.symbolUrl, symbolUrl = _l === void 0 ? \"\" : _l, _m = _a.colorTheme, colorTheme = _m === void 0 ? \"light\" : _m, _o = _a.isZoomEnabled, isZoomEnabled = _o === void 0 ? true : _o, _p = _a.hasSymbolTooltip, hasSymbolTooltip = _p === void 0 ? true : _p, _q = _a.hasTopBar, hasTopBar = _q === void 0 ? true : _q, _r = _a.isSetDataSetEnabled, isSetDataSetEnabled = _r === void 0 ? true : _r, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"dataSource\", \"exchanges\", \"grouping\", \"blockSize\", \"blockColor\", \"locale\", \"autoSize\", \"height\", \"width\", \"symbolUrl\", \"colorTheme\", \"isZoomEnabled\", \"hasSymbolTooltip\", \"hasTopBar\", \"isSetDataSetEnabled\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign({ dataSource: dataSource, exchanges: exchanges, grouping: grouping, blockSize: blockSize, blockColor: blockColor, locale: locale, autoSize: autoSize }, (autoSize ? { width: \"100%\", height: \"100%\" } : { width: width, height: height })), { symbolUrl: symbolUrl, colorTheme: colorTheme, isZoomEnabled: isZoomEnabled, hasSymbolTooltip: hasSymbolTooltip, hasTopBar: hasTopBar, isSetDataSetEnabled: isSetDataSetEnabled }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-stock-heatmap.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/?utm_source=www.tradingview.com&utm_medium=widget_new&utm_campaign=stock-heatmap\",\r\n            spanText: \"Track all markets on TradingView\",\r\n        } }));\r\n};\r\nvar StockHeatmap$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(StockHeatmap);\n\nvar CryptoCoinsHeatmap = function (_a) {\r\n    var _b = _a.dataSource, dataSource = _b === void 0 ? \"Crypto\" : _b, _c = _a.blockSize, blockSize = _c === void 0 ? \"market_cap_calc\" : _c, _d = _a.blockColor, blockColor = _d === void 0 ? \"change\" : _d, _e = _a.locale, locale = _e === void 0 ? \"en\" : _e, _f = _a.autoSize, autoSize = _f === void 0 ? false : _f, _g = _a.height, height = _g === void 0 ? undefined : _g, _h = _a.width, width = _h === void 0 ? undefined : _h, _j = _a.symbolUrl, symbolUrl = _j === void 0 ? \"\" : _j, _k = _a.colorTheme, colorTheme = _k === void 0 ? \"light\" : _k, _l = _a.isZoomEnabled, isZoomEnabled = _l === void 0 ? true : _l, _m = _a.hasSymbolTooltip, hasSymbolTooltip = _m === void 0 ? true : _m, _o = _a.hasTopBar, hasTopBar = _o === void 0 ? true : _o, _p = _a.isSetDataSetEnabled, isSetDataSetEnabled = _p === void 0 ? true : _p, copyrightStyles = _a.copyrightStyles, props = __rest(_a, [\"dataSource\", \"blockSize\", \"blockColor\", \"locale\", \"autoSize\", \"height\", \"width\", \"symbolUrl\", \"colorTheme\", \"isZoomEnabled\", \"hasSymbolTooltip\", \"hasTopBar\", \"isSetDataSetEnabled\", \"copyrightStyles\"]);\r\n    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, { scriptHTML: __assign(__assign(__assign({ dataSource: dataSource, blockSize: blockSize, blockColor: blockColor, locale: locale, autoSize: autoSize }, (autoSize ? { width: \"100%\", height: \"100%\" } : { width: width, height: height })), { symbolUrl: symbolUrl, colorTheme: colorTheme, isZoomEnabled: isZoomEnabled, hasSymbolTooltip: hasSymbolTooltip, hasTopBar: hasTopBar, isSetDataSetEnabled: isSetDataSetEnabled }), props), scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-crypto-coins-heatmap.js\", copyrightProps: {\r\n            copyrightStyles: copyrightStyles,\r\n            href: \"https://www.tradingview.com/?utm_source=www.tradingview.com&utm_medium=widget_new&utm_campaign=stock-heatmap\",\r\n            spanText: \"Track all markets on TradingView\",\r\n        } }));\r\n};\r\nvar CryptoCoinsHeatmap$1 = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(CryptoCoinsHeatmap);\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-ts-tradingview-widgets/dist/index.js\n");

/***/ })

};
;